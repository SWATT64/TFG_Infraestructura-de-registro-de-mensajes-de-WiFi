# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.job import Job  # noqa: F401,E501
from swagger_server.models.url import URL  # noqa: F401,E501
from swagger_server import util


class JobSpecification(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, job: Job=None, url: URL=None):  # noqa: E501
        """JobSpecification - a model defined in Swagger

        :param job: The job of this JobSpecification.  # noqa: E501
        :type job: Job
        :param url: The url of this JobSpecification.  # noqa: E501
        :type url: URL
        """
        self.swagger_types = {
            'job': Job,
            'url': URL
        }

        self.attribute_map = {
            'job': 'Job',
            'url': 'URL'
        }
        self._job = job
        self._url = url

    @classmethod
    def from_db(cls, job_db):

        return cls(
            job = Job.from_db(job_db),
            url = URL.from_db(job_db)

        )

    @classmethod
    def from_dict(cls, dikt) -> 'JobSpecification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The JobSpecification of this JobSpecification.  # noqa: E501
        :rtype: JobSpecification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job(self) -> Job:
        """Gets the job of this JobSpecification.


        :return: The job of this JobSpecification.
        :rtype: Job
        """
        return self._job

    @job.setter
    def job(self, job: Job):
        """Sets the job of this JobSpecification.


        :param job: The job of this JobSpecification.
        :type job: Job
        """

        self._job = job

    @property
    def url(self) -> URL:
        """Gets the url of this JobSpecification.


        :return: The url of this JobSpecification.
        :rtype: URL
        """
        return self._url

    @url.setter
    def url(self, url: URL):
        """Sets the url of this JobSpecification.


        :param url: The url of this JobSpecification.
        :type url: URL
        """

        self._url = url
